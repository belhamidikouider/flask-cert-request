from flask import Flask, render_template, request, redirect, url_for, session
import sqlite3
import os

app = Flask(__name__)
app.secret_key = "secret_key_for_session"

DATABASE = "requests.db"
ADMIN_PASSWORD = "admin123"

# دالة لإنشاء قاعدة البيانات إذا لم تكن موجودة
def init_db():
    if not os.path.exists(DATABASE):
        conn = sqlite3.connect(DATABASE)
        c = conn.cursor()
        c.execute("""
            CREATE TABLE requests (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                first_name TEXT,
                last_name TEXT,
                birth_date TEXT,
                birth_place TEXT,
                father_name TEXT,
                mother_name TEXT,
                rank TEXT,
                phone TEXT,
                email TEXT
            )
        """)
        conn.commit()
        conn.close()

# إنشاء قاعدة البيانات عند أول تشغيل
init_db()

# الصفحة الرئيسية لإرسال الطلب
@app.route("/")
def home():
    return render_template("form.html")

# إضافة طلب جديد
@app.route("/submit", methods=["POST"])
def submit():
    conn = sqlite3.connect(DATABASE)
    c = conn.cursor()
    c.execute("""
        INSERT INTO requests (
            first_name, last_name, birth_date, birth_place,
            father_name, mother_name, rank, phone, email
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    """, (
        request.form["first_name"],
        request.form["last_name"],
        request.form["birth_date"],
        request.form["birth_place"],
        request.form["father_name"],
        request.form["mother_name"],
        request.form["rank"],
        request.form["phone"],
        request.form["email"]
    ))
    conn.commit()
    conn.close()
    return redirect(url_for("home"))

# صفحة تسجيل دخول المسؤول
@app.route("/admin/login", methods=["GET", "POST"])
def login():
    if request.method == "POST":
        password = request.form["password"]
        if password == ADMIN_PASSWORD:
            session["logged_in"] = True
            return redirect(url_for("requests_list_view"))
        else:
            return render_template("login.html", error="كلمة المرور غير صحيحة")
    return render_template("login.html")

# تسجيل خروج المسؤول
@app.route("/admin/logout")
def logout():
    session.pop("logged_in", None)
    return redirect(url_for("login"))

# عرض جميع الطلبات
@app.route("/admin/requests")
def requests_list_view():
    if not session.get("logged_in"):
        return redirect(url_for("login"))
    conn = sqlite3.connect(DATABASE)
    c = conn.cursor()
    c.execute("SELECT * FROM requests")
    rows = c.fetchall()
    conn.close()

    requests = []
    for row in rows:
        requests.append({
            "id": row[0],
            "first_name": row[1],
            "last_name": row[2],
            "birth_date": row[3],
            "birth_place": row[4],
            "father_name": row[5],
            "mother_name": row[6],
            "rank": row[7],
            "phone": row[8],
            "email": row[9]
        })

    return render_template("requests.html", requests=requests)

# حذف طلب
@app.route("/admin/delete/<int:request_id>")
def delete_request(request_id):
    if not session.get("logged_in"):
        return redirect(url_for("login"))
    conn = sqlite3.connect(DATABASE)
    c = conn.cursor()
    c.execute("DELETE FROM requests WHERE id = ?", (request_id,))
    conn.commit()
    conn.close()
    return redirect(url_for("requests_list_view"))

if __name__ == "__main__":
    app.run(debug=True)


